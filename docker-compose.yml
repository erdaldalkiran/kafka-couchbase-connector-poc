version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.1.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - "zookeeper"
  connect:
    build:
      context: ./connect
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      CONNECT_GROUP_ID: connect-group-id
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: ${DOCKER_HOST_IP:-0.0.0.0}
  kafdrop:
    image: obsidiandynamics/kafdrop:3.29.0
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
  cb:
    build:
      context: ./cb
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8091-8094:8091-8094"
      - "11210:11210"
    environment:
      CLUSTER_NAME: local
      COUCHBASE_ADMINISTRATOR_USERNAME: Administrator
      COUCHBASE_ADMINISTRATOR_PASSWORD: admin123!
      COUCHBASE_BUCKET: demo
      COUCHBASE_SCOPE: demo
      COUCHBASE_COLLECTION: item
      COUCHBASE_OUTBOX_COLLECTION: item_outbox_event
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      API_PORT: 8080
      COUCHBASE_HOST: cb
      COUCHBASE_USERNAME: Administrator
      COUCHBASE_PASSWORD: admin123!
      COUCHBASE_BUCKET: demo
      COUCHBASE_SCOPE: demo
      COUCHBASE_COLLECTION: item
      COUCHBASE_OUTBOX_COLLECTION: item_outbox_event