version: "3.9"
services:
  kafka:
    image: obsidiandynamics/kafka:2.3.0-11
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
  kafdrop:
    image: obsidiandynamics/kafdrop:3.29.0
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
  cb:
    build:
      context: ./cb
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8091-8094:8091-8094"
      - "11210:11210"
    environment:
      CLUSTER_NAME: local
      COUCHBASE_ADMINISTRATOR_USERNAME: Administrator
      COUCHBASE_ADMINISTRATOR_PASSWORD: admin123!
      COUCHBASE_BUCKET: demo
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      API_PORT: 8080
      COUCHBASE_HOST: cb
      COUCHBASE_USERNAME: Administrator
      COUCHBASE_PASSWORD: admin123!
      COUCHBASE_BUCKET: demo